# SPDX-License-Identifier: Apache-2.0

on: [push, pull_request]

name: AVR Tests

jobs:
  avr_test:
    name: Run AVR Test Suites
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-src

      - name: Install simavr and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y simavr gcc-avr avr-libc

      - name: Install cargo-bloat
        run: cargo install cargo-bloat
      - name: Install cargo-binutils
        run: cargo install cargo-binutils

      - name: Run Stack Analysis
        working-directory: avr_demo
        run: python run_suite.py stack

      - name: Run Bloat Analysis
        working-directory: avr_demo
        run: python run_suite.py bloat

  avr_panic_check:
    name: AVR Panic Prevention (${{ matrix.int_type }}, ${{ matrix.pico_size }}, ${{ matrix.profile }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        example: [test_picojson]
        int_type: [int8, int32]
        profile: [release, dev]
        pico_size: [pico-tiny, pico-huge]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-src

      - name: Install simavr and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y simavr gcc-avr avr-libc

      - name: Install cargo-binutils
        run: cargo install cargo-binutils

      - name: Build the demos in ${{ matrix.profile }} mode
        working-directory: avr_demo
        run: cargo build --example ${{ matrix.example }} --profile ${{ matrix.profile }} --no-default-features --features "${{ matrix.int_type }},${{ matrix.pico_size }}"

      - name: Check for panics ( minimal )
        working-directory: avr_demo
        run: cargo nm    --example minimal               --profile ${{ matrix.profile }} --no-default-features --features "${{ matrix.int_type }},${{ matrix.pico_size }}" | ( ! egrep "panic|unwind" )

      - name: Check for panics
        working-directory: avr_demo
        run: cargo nm    --example ${{ matrix.example }} --profile ${{ matrix.profile }} --no-default-features --features "${{ matrix.int_type }},${{ matrix.pico_size }}" | ( ! egrep "panic|unwind" )
